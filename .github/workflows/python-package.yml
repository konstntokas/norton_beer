# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov build
        python -m build
        cd dist
        python -m pip install norton_beer-1.0.0-py3-none-any.whl
        cd ..
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --junitxml=data/pytest_1.xml --cov-report=term-missing:skip-covered --cov=norton_beer tests/ | tee data/pytest-coverage_4.txt
    - name: Pytest coverage comment
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./data/pytest-coverage_4.txt
        junitxml-path: ./data/pytest_1.xml

    - name: Check the output coverage
      run: |
        echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
        echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
        echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
        echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
        echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
        echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
        echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
        echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
        echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
        echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
    - name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
        gistID: 5e90d640f8c212ab7bbac38f72323f80
        filename: pytest-coverage-comment__main.json
        label: Coverage Report
        message: ${{ steps.coverageComment.outputs.coverage }}
        color: ${{ steps.coverageComment.outputs.color }}
        namedLogo: python